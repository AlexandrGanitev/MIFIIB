# Допустим, у нас есть два списка одинакового размера:

L = [i for i in range(10)]
# 0 1 2 3 4 5 6 7 8 9
M = [i for i in range(10,0,-1)]
# 10 9 8 7 6 5 4 3 2 1
# И нам необходимо создать новый список, который будет состоять из произведений соответствующих элементов
# друг на друга.

# он должен выглядеть так
# 0 9 16 21 24 25 24 21 16 9
# Мы знаем, что элементов в списке десять, поэтому можем пробежаться в цикле по индексам от 0 до 10:
N = [ ]
for i in range(10):
    N.append(L[i] * M[i])
print(N)
# В Python существует функция zip(), которая позволяет объединить два списка в новый список кортежей,
# каждый из которых будет содержать по одному элементу из каждого списка.
for a in zip(L,M):
    print(a)
print('*' * 25, "\nВариант 2: ")
for a, b in zip(L,M):
    print('a =', a, 'b =', b)
print('*' * 25)
"""
Задание 3.8.17
Используя функцию zip() внутри генераторов списков, вычислите поэлементные произведения списков L и M."""
# N = [N.append(L[i] * M[i]) for i in zip(L,M)] - Здесь выдается ошибка:
# N = [N.append(L[i] * M[i]) for i in zip(L,M)]
# TypeError: list indices must be integers or slices, not tuple. Так как zip() объединяет списки в кортеж,
# то и использовать умножение по индексу нельзя.
N = [a*b for a,b in zip(L,M)]
# print(type(a)) -  <class 'int'>
print(N)
