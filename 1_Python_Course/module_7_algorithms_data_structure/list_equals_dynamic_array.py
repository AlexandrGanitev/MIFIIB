"""
Убедимся в том, что python list реализует именно динамический массив. Для этого мы можем провести временные тесты.
Для их реализации импортируем модуль timeit. Функция с аналогичным названием timeit измеряет время, которое
затрачивается на запуск кода. В качестве первого аргумента принимает исследуемый код (в виде строки), а аргумент
number - количество повторений. Мы укажем этот аргумент равным 100, чтобы функций timeit запустила наш код 100 раз.
Результат измерений разделим также на 100, чтобы получить среднее время работы. Напишем функцию, которая будет
возвращать результат измерений.
"""
import timeit


def elapsed_time(func, size):
    return timeit.timeit(func % size, number=100)/100


code_append = """
elements = range(%d) # генератор элементов, которые будут вставляться в список
array = [] # список, работу которого тестируем
for e in elements:
    array.append(e) # добавляем каждый раз в конец """

# elements = range(100) # инициализация генератора - O(1) array = [] # инициализация массива - O(1)
# array = []
# for e in elements: # цикл из n итераций
#     array.append(e) # вставка в конец имеет сложность O(1)
#

for s in range(10,15):
    measure_1 = elapsed_time(code_append, 2**s)
    measure_2 = elapsed_time(code_append, 2**(s+1))
    ratio = measure_2 / measure_1
    print("[%d]/[%d] -> %5.2f" % (2**(s+1), 2**s, ratio))

