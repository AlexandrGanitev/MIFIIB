def func(a, b, c):
   print('a =', a)
   print('b =', b)
   print('c =', c)

func(1, 2, 3)
# a = 1
# b = 2
# c = 3

func(3, 2, 1)
# a = 3
# b = 2
# c = 1

# Видим, что в зависимости от того, в каком порядке мы передаем значения в функцию func,
# аргументы a, b, c принимают различные значения. В этом и есть суть позиционных аргументов.
#
# Но никто не запрещает нам обращаться к переменным прямо по имени:

func(a=1, b=2, c=3)
# a = 1
# b = 2
# c = 3

func(c=3, b=2, a=1)
# a = 1
# b = 2
# c = 3

print("Важная особенность: все именованные аргументы должны идти строго после позиционных,"
      "как при объявлении функций,так и при их вызове.")
# Правильно
func(a, b, c=3)

# Неправильно
# func(a=1, b, c)
# SyntaxError: positional argument follows keyword argument