"""
Мы можем прямо внутри функции указать ещё одно объявление функции, и при вызове внешней функции
она будет возвращать каждый раз новую функцию. Здесь возвращаемая функция всегда статична.
Это не очень интересно, поэтому давайте рассмотрим пример, в котором будут возвращаться различные функции.
Функция нам будет создавать функции, которые будут умножать на какое-то фиксированное число."""


def get_mul_func(m) :
    nonlocal_m = m

    def local_mul(n) :
        return n * nonlocal_m

    return local_mul


two_mul = get_mul_func(2)  # возвращаем функцию, которая будет умножать числа на 2
# print(two_mul)
print(two_mul(5))  # 5 * 2
"""
Переменная nonlocal_m по отношению к функции local_mul находится в неком промежуточном состоянии. 
Она и не глобальная, потому что объявлена не на уровне скрипта, но и не локальная по отношению к 
функции local_mul. Использование переменных, объявленных вне функции, называется замыканием функций.
"""
