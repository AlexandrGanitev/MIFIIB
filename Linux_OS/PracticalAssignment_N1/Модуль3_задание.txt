✏️ ПРАКТИЧЕСКОЕ ЗАДАНИЕ К ЭТОМУ МОДУЛЮ СОСТОИТ ИЗ 3 ЧАСТЕЙ:
Пишем Bash-скрипт для автоматизации настроек системы.
Пишем Bash-скрипт для резервного копирования и автоматизируем его.
Автоматизируем отправку логов по почте.
Чтобы успешно пройти практику, вам нужно выполнить каждую из частей задания. Результаты загрузите на GitHub, скопируйте ссылку к ним и вставьте в форму ответа.

ПРАКТИЧЕСКОЕ ЗАДАНИЕ №1
Напишите Bash-скрипт, который автоматически настраивает систему под вас. В дальнейшем вы сможете его использовать на новых виртуальных машинах с ОС Linux.

УСЛОВИЯ РЕАЛИЗАЦИИ
Что должно быть в скрипте:

Проверка на наличие репозитория Backports в списке репозиториев. Если отсутствует — добавляем (под используемый вами дистрибутив).
Обновление пакетного менеджера.
Установка и запуск Apache2.
Установка Python.
Установка и поднятие SSH-сервера.
Cкрипт должен содержать минимум 10 действий, включая указанные выше. К 5 обязательным действиям добавьте ещё 5 на ваше усмотрение.


Примечание: учтите, что, например, 5 однотипных действий по созданию директорий не котируются. Действия должны быть осмысленными. Пусть это будет создание вспомогательных скриптов/файлов, изменение конфигураций или настройка прав доступа.
В качестве вдохновения посмотрите примеры разных скриптов на Bash здесь.

Готовый скрипт загрузите на GitHub.

ПРАКТИЧЕСКОЕ ЗАДАНИЕ №2
Задание состоит из трёх этапов:

Напишите Bash-скрипт для резервного копирования директории /home, конфигурационных файлов основных утилит удалённого доступа (SSH, RDP, FTP), а также директории /var/log.
В cron создайте задачу для запуска этого скрипта каждую пятницу в 18:30.
Переместите получившийся бэкап в отдельную заранее созданную директорию /archive.
УСЛОВИЯ РЕАЛИЗАЦИИ
В качестве ответа предоставьте:

Bash-скрипт.
Содержание файла crontab (текст) с созданной задачей.
Скриншот сделанного бэкапа.
Файлы загрузите на GitHub в отдельную от предыдущего пункта папку.

ПРАКТИЧЕСКОЕ ЗАДАНИЕ №3
Настройте автоматическую отправку по почте логов изученных сервисов: SSH, FTP, RDP.

УСЛОВИЯ РЕАЛИЗАЦИИ
Используйте утилиту Logwatch и планировщик задач cron.
Письмо должно отправляться каждый день в 8:00.
Уровень детализации — на ваше усмотрение.
В качестве ответа приложите:

Текст задачи в cron.
Команду для утилиты Logwatch (в отдельном текстовом файле).
Скриншот полученного письма.
Файлы загрузите на GitHub в отдельную от предыдущих пунктов папку.

КРИТЕРИИ ПРОВЕРКИ МЕНТОРОМ К ЗАДАНИЮ №1:
5 баллов	Скрипт осмысленный, есть обязательные действия, 5 или более дополнительных действий.
4 балла	Скрипт осмысленный, есть обязательные действия, меньше 5 дополнительных действий.
3 балла	Есть обязательные действия, дополнительные действия неосмысленные.
2 балла	Недостаточно обязательных действий, дополнительные действия могут присутствовать в полном объёме.
1 балл	Отсутствуют все обязательные действия.
0 баллов	Скрипт не сделан.


КРИТЕРИЙ ПРОВЕРКИ МЕНТОРОМ К ЗАДАНИЮ №2:
3 балла	Есть все необходимые файлы, скрипт написан верно, задача написана верно.
2 балла	Есть все необходимые файлы, скрипт или задача частично соответствуют заданию.
1 балл	Присутствуют не все файлы и/или скрипт или задача частично соответствует заданию.
0 баллов	Отсутствует решение.


КРИТЕРИИ ПРОВЕРКИ МЕНТОРОМ К ЗАДАНИЮ №3:
3 балла	Есть все необходимые файлы, задача написана верно, письмо получено.
2 балла	Есть все необходимые файлы, в задаче есть несоответствие заданию (например, неправильно указано время), письмо получено.
1 балл	Не хватает какого-то файла (параметров для Logwatch/скриншота/задачи в cron).
0 баллов	Отсутствует решение.


ДОПОЛНИТЕЛЬНО:
1 балл	Решение залито на GitHub.
0 баллов	Решение не залито на GitHub.
БЕЗОПАСНОСТЬ ОПЕРАЦИОННЫХ СИСТЕМ. МОДУЛЬ 3. ПРАКТИЧЕСКОЕ ЗАДАНИЕ (HW)